version: 2.1

executors:
  python-executor:
    docker:
      - image: cimg/python:3.9
    working_directory: ~/repo

orbs:
  sonarcloud: sonarsource/sonarcloud@2.0.0
  ggshield: gitguardian/ggshield@volatile

jobs:
  install_dependencies:
    executor: python-executor
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "app/requirements.txt" }}
            - v1-dependencies-

      - run:
          name: Install dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r app/requirements.txt

      - save_cache:
          paths:
            - ~/.cache/pip
            - venv
          key: v1-dependencies-{{ checksum "app/requirements.txt" }}

  linting:
    executor: python-executor
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "app/requirements.txt" }}
            - v1-dependencies-

      - run:
          name: Run Pylint
          command: |
            . venv/bin/activate
            pylint --rcfile=app/.pylintrc app/app.py

  test_coverage:
    executor: python-executor
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "app/requirements.txt" }}
            - v1-dependencies-

      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            pytest -v --tb=short

      - run:
          name: Run coverage
          command: |
            . venv/bin/activate
            mkdir -p coverage_reports
            pytest --cov=app --cov-report=xml:coverage_reports/coverage.xml app/test_app.py
      
      - persist_to_workspace:
          root: .
          paths:
            - coverage_reports

      - run:
          name: Finished dev pipeline
          command: |
            echo "Finished dev pipeline"

  sonarqube_scan:
    executor: python-executor
    steps:
      - checkout
      - attach_workspace:
          at: .
      - sonarcloud/scan
            
      - run:
          name: Finished main pipeline
          command: |
            echo "Finished main pipeline"

  build-and-push-dev:
    executor: python-executor
    steps:
      - checkout
      - setup_remote_docker

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "app/requirements.txt" }}
            - v1-dependencies-

      - run:
          name: Get `dev` version
          command: |
            COMMIT_HASH=$(git rev-parse --short HEAD)
            echo "export IMAGE_VERSION=dev-${COMMIT_HASH}" >> $BASH_ENV
      - run:
          name: Build Docker image
          command: docker build -t $DOCKERHUB_USERNAME/flask-app:${IMAGE_VERSION} .
      - run:
          name: Docker Hub login (for dev)
          command: echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: Upload image to Docker Hub (dev)
          command: docker push $DOCKERHUB_USERNAME/flask-app:${IMAGE_VERSION}

workflows:
  linting-test-coverage:
    jobs:
      - install_dependencies
      - linting:
          requires:
            - install_dependencies
      - test_coverage:
          requires:
            - linting
      - ggshield/scan:
          name: ggshield-scan
          base_revision: <<pipeline.git.base_revision>>
          revision: <<pipeline.git.revision>>
          context: GitGuardian
          requires:
            - test_coverage
          filters:
            branches:
              only:
                - main
                - dev
      - build-and-push-dev:
          context: DockerHub
          requires:
            - test_coverage
          filters:
            branches:
              only:
                - dev
      - sonarqube_scan:
          context: SonarCloud
          requires:
            - test_coverage
          filters:
            branches:
              only:
                - main
      
